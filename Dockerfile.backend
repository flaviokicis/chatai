# syntax=docker/dockerfile:1.6

# Frontend build stage
FROM node:18-alpine AS frontend-builder

WORKDIR /frontend

# Copy frontend package files
COPY frontend/package.json frontend/pnpm-lock.yaml ./

# Install pnpm and dependencies
RUN npm install -g pnpm
RUN pnpm install --frozen-lockfile

# Copy frontend source
COPY frontend/ ./

# Build static export
RUN pnpm run build

# Backend stage
FROM python:3.12-slim AS base

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# System deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy backend project files and source
COPY backend/pyproject.toml backend/uv.lock backend/README.md ./
COPY backend/app ./app
COPY backend/config.json ./config.json
COPY backend/config.local.json ./config.local.json

# Copy frontend static files from build stage
COPY --from=frontend-builder /frontend/out ./static

# Install uv
RUN pip install --no-cache-dir uv

# Install deps (no dev)
RUN uv sync --frozen --no-dev

EXPOSE 8080

ENV CONFIG_JSON_PATH=/app/config.local.json

CMD ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080"]


