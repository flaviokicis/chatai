[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chatai-backend"
version = "0.1.0"
description = "FastAPI webhook for Twilio WhatsApp"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
keywords = ["fastapi", "twilio", "whatsapp", "webhook"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Framework :: FastAPI",
]
dependencies = [
  "fastapi",
  "uvicorn[standard]",
  "python-dotenv",
  "pydantic-settings",
  "twilio",
  "python-multipart",
  "langchain>=0.3.0",
  "langchain-google-genai>=2.0.0",
  "redis>=5.0.0",
  "langchain-community>=0.3.0",
  "SQLAlchemy>=2.0.29",
  "psycopg[binary]>=3.1.18",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
addopts = "-q"
pythonpath = ["."]
testpaths = ["tests"]

[tool.uv]
dev-dependencies = [
  "pytest",
  "httpx",
  "mypy",
  "ruff",
  "pre-commit>=4.3.0",
]

[tool.mypy]
python_version = "3.12"
strict = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
  "E",   # pycodestyle (errors)
  "W",   # pycodestyle (warnings)
  "F",   # pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "S",   # bandit
  "ANN", # flake8-annotations
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "EM",  # flake8-errmsg
  "ERA", # eradicate (commented-out code)
  "EXE", # flake8-executable
  "FBT", # flake8-boolean-trap
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PERF",# perflint
  "PIE", # flake8-pie
  "PL",  # pylint rules
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RSE", # flake8-raise
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  "TRY", # tryceratops
  "RUF"  # ruff-specific rules
]
ignore = [
  "E501",  # handled by formatter; avoid line-length errors in long prompts/tests
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "ANN"]
"backend/tests/**/*" = ["S101", "ANN", "PT018"]
"app/conversation.py" = ["S608"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false
mypy-init-return = true
